/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Ömer CENGİZ
 */
public class DosyaSecimi extends javax.swing.JFrame {
    
            private final JFileChooser openFileChooser;
            private  BufferedImage orijinalImg;

    /**
     * Creates new form DosyaSecimi
     */
    public DosyaSecimi() {
        initComponents();
        openFileChooser =new JFileChooser();
        openFileChooser.setCurrentDirectory(new File("C:\\Users\\Ömer CENGİZ\\Desktop\\renkler"));
        openFileChooser.setFileFilter(new FileNameExtensionFilter("PNG images","png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        butonNumune = new javax.swing.JButton();
        mesaj = new javax.swing.JLabel();
        butonStandart = new javax.swing.JButton();
        labNumune = new javax.swing.JLabel();
        labStandart = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        deltaE = new javax.swing.JLabel();
        btnSonuc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        butonNumune.setText("Numune Resim");
        butonNumune.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butonNumuneActionPerformed(evt);
            }
        });

        butonStandart.setText("Standart Resim");
        butonStandart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butonStandartActionPerformed(evt);
            }
        });

        jLabel1.setText("DeltaE");

        btnSonuc.setText("DETAYLI SONUÇLARI GÖSTER");
        btnSonuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSonucActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labNumune, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 332, Short.MAX_VALUE)
                .addComponent(labStandart, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(butonNumune)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(butonStandart)
                .addGap(148, 148, 148))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deltaE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(362, 362, 362)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(btnSonuc, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNumune, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labStandart, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butonNumune)
                    .addComponent(butonStandart))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(btnSonuc)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deltaE)
                .addGap(112, 112, 112))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        public String urlNumune,urlStandart, uzay;
        public int [] RGBdizi=new int[6];
        public float [] XYZNumunedizi=new float[3];
        public float [] XYZStandartdizi=new float[3];
        public float [] CIENumunedizi=new float[3];
        public float [] CIEStandartdizi=new float[3];
    private void butonNumuneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butonNumuneActionPerformed
        // TODO add your handling code here:

        resimGöster göster=new resimGöster();
        JFileChooser fileChooser =new JFileChooser();
        FileNameExtensionFilter filter=new  FileNameExtensionFilter("3 Extensions Sported","jpg","png","jpeg");
        fileChooser.setFileFilter(filter);
        int selected =fileChooser.showOpenDialog(null);
        if(selected == JFileChooser.APPROVE_OPTION){
            File fileNumune=fileChooser.getSelectedFile();
            String resimNumune = fileNumune.getAbsolutePath();
            JOptionPane.showMessageDialog(null, resimNumune);
            ImageIcon imageIconNumune=new ImageIcon(resimNumune);
            labNumune.setIcon(imageIconNumune);
            urlNumune=resimNumune; 
        }
    }//GEN-LAST:event_butonNumuneActionPerformed
        float degerEEE;
    private void butonStandartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butonStandartActionPerformed
        // TODO add your handling code here:
        RenkUzayları renkUzayları=new RenkUzayları();
        JFileChooser fileChooser =new JFileChooser();
        resimGöster göster=new resimGöster();
        FileNameExtensionFilter filter=new  FileNameExtensionFilter("3 Extensions Sported","jpg","png","jpeg");
        fileChooser.setFileFilter(filter);
        int selected =fileChooser.showOpenDialog(null);
        if(selected == JFileChooser.APPROVE_OPTION){
            File fileStandart=fileChooser.getSelectedFile();
            String resimStandart = fileStandart.getAbsolutePath();
            ImageIcon imageIconStandart=new ImageIcon(resimStandart);
            labStandart.setIcon(imageIconStandart);
            urlStandart =resimStandart;
            System.out.println("asda: " + renkUzayları.uzaySecım());
            float deltaEE=sonucGösterCIELab(urlNumune, urlStandart,uzay);
            deltaE.setText(String.valueOf(deltaEE));
            degerEEE=deltaEE;
            
            
        }
    }//GEN-LAST:event_butonStandartActionPerformed

    private void btnSonucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSonucActionPerformed
        // TODO add your handling code here:
        resimGöster göster=new resimGöster();
        göster.degerE(degerEEE);
        System.out.println("*********************: R : "+ RGBdizi[0]);
        göster.degerler(RGBdizi, XYZNumunedizi, XYZStandartdizi, CIENumunedizi, CIEStandartdizi);
        göster.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnSonucActionPerformed
    public void secım(String secım){
        uzay =secım;
    }    
    public float sonucGösterCIELab(String urlNumune,String Standart,String secım){
            DosyaSecimi dosyaSecimi=new DosyaSecimi();
            
            if(secım=="CIELab"){
            int []diziRgb = dosyaSecimi.RGBrun(urlNumune, urlStandart);
            RGBdizi=diziRgb;
            float [] diziXYZNumune=RGBtoXYZ(diziRgb[0], diziRgb[1],diziRgb[2]);
            XYZNumunedizi=diziXYZNumune;
            float [] diziXYZStandart = RGBtoXYZ(diziRgb[3], diziRgb[4], diziRgb[5]);
            XYZStandartdizi=diziXYZStandart;
            float[] CIE2_D65 = {95.047f, 100f, 108.883f};
            float [] diziLabNumune = XYZtoLAB(diziXYZNumune[0], diziXYZNumune[1], diziXYZNumune[2], CIE2_D65);
            CIENumunedizi=diziLabNumune;
            float [] diziLabStandart = XYZtoLAB(diziXYZStandart[0], diziXYZStandart[1], diziXYZStandart[2], CIE2_D65);
            CIEStandartdizi=diziLabStandart;
            float deltaEE = (float) calculateDeltaE(diziLabNumune[0],diziLabNumune[1],diziLabNumune[2] , diziLabStandart[0],diziLabStandart[1],diziLabStandart[2]);
            
            return deltaEE;
            }
            else if(secım=="XYZ"){
            int []diziRgb = dosyaSecimi.RGBrun(urlNumune, urlStandart);
            RGBdizi=diziRgb;
            float [] diziXYZNumune=RGBtoXYZ(diziRgb[0], diziRgb[1],diziRgb[2]);
             XYZNumunedizi=diziXYZNumune;
            float [] diziXYZStandart = RGBtoXYZ(diziRgb[3], diziRgb[4], diziRgb[5]);
            XYZStandartdizi=diziXYZStandart;
            float DeltaExyz=    (float) Math.sqrt(
                                (diziXYZNumune[0]-diziXYZStandart[0])+
                                (diziXYZNumune[1]-diziXYZStandart[1])+
                                (diziXYZNumune[2]-diziXYZStandart[2]));
            return DeltaExyz;
            }else if(secım == "RGB"){
                int []diziRgb = dosyaSecimi.RGBrun(urlNumune, urlStandart);
                RGBdizi=diziRgb;
             float DeltaERgb =   (float) Math.sqrt(
                                (diziRgb[0]-diziRgb[3])+
                                (diziRgb[1]-diziRgb[4])+
                                (diziRgb[2]-diziRgb[5]));
             return DeltaERgb;
            }
            return 0f;
        }
    public int [] RGBrun(String urlNumune,String urlStandart) {
 

     int []diziRGB=new int[6];
     int clrNumune, redNumune, greenNumune, blueNumune, sumredNumune = 0, sumgreenNumune = 0, sumblueNumune = 0;
     int clrStandart, redStandart, greenStandart, blueStandart, sumredStandart = 0, sumgreenStandart = 0, sumblueStandart = 0;
     
     try {
      File numune = new File(urlNumune);
      File standart = new File(urlStandart);
      BufferedImage imageNumune = ImageIO.read(numune);
      BufferedImage imageStandart = ImageIO.read(standart);

      int heightNumune = imageNumune.getHeight(); //height of image
      int widthNumune = imageNumune.getWidth(); //width of image
      for (int i = 0; i < widthNumune; i++) {
       for (int j = 0; j < heightNumune; j++) {
        clrNumune = imageNumune.getRGB(i, j);
        Color colorNumune =new Color(clrNumune,true);
        redNumune = colorNumune.getRed();//(clr & 0x00ff0000) >> 16;
        greenNumune = colorNumune.getGreen();//(clr & 0x0000ff00) >> 8;
        blueNumune = colorNumune.getBlue();//clr & 0x000000ff;
        sumredNumune = redNumune + sumredNumune; //calculate total red value
        sumgreenNumune = greenNumune + sumgreenNumune; //calculate total green value
        sumblueNumune = blueNumune + sumblueNumune; //calculate total blue value
        
       }
      }
      
      sumredNumune = sumredNumune / (heightNumune * widthNumune); //avg red value
      sumblueNumune = sumblueNumune / (heightNumune * widthNumune); //avg blue value
      sumgreenNumune = sumgreenNumune / (heightNumune * widthNumune); //avg green value
         System.out.println("red : "+sumredNumune+" greenNumune : "+sumgreenNumune+" blueNumune : "+sumblueNumune);
        diziRGB[0]=sumredNumune;
        diziRGB[1]=sumgreenNumune;
        diziRGB[2]=sumblueNumune;
      
      
      int heightStandart = imageStandart.getHeight(); //height of image
      int widthStandart = imageStandart.getWidth(); //width of image
      for (int i = 0; i < widthStandart; i++) {
       for (int j = 0; j < heightStandart; j++) {
        clrStandart = imageStandart.getRGB(i, j);
        Color colorStandart =new Color(clrStandart,true);
        redStandart = colorStandart.getRed();//(clr & 0x00ff0000) >> 16;
        greenStandart = colorStandart.getGreen();//(clr & 0x0000ff00) >> 8;
        blueStandart = colorStandart.getBlue();//clr & 0x000000ff;
        sumredStandart = redStandart + sumredStandart; //calculate total red value
        sumgreenStandart = greenStandart + sumgreenStandart; //calculate total green value
        sumblueStandart = blueStandart + sumblueStandart; //calculate total blue value
        
       }
      }
      

      sumredStandart = sumredStandart / (heightStandart * widthStandart); //avg red value
      sumblueStandart = sumblueStandart / (heightStandart * widthStandart); //avg blue value
      sumgreenStandart = sumgreenStandart / (heightStandart * widthStandart); //avg green value
         System.out.println("red : "+sumredStandart+" green : "+sumgreenStandart+" blue : "+sumblueStandart);
        diziRGB[3]=sumredStandart;
        diziRGB[4]=sumgreenStandart;
        diziRGB[5]=sumblueStandart;
     } catch (Exception e) {
      //System.out.println("Exeption");
     }
     //////////////////////////////////////////////////////////////						
    return  diziRGB;
    }
 
 public static float[] XYZtoLAB(float x, float y, float z, float[] tristimulus){
        float[] lab = new float[3];
//        float[] tristimulus = {95.0429, 100.0, 108.8900};
        //float[] CIE2_D65 = {95.047f, 100f, 108.883f};
        x /= tristimulus[0];
        y /= tristimulus[1];
        z /= tristimulus[2];
        
        if (x > 0.008856)
            x = (float)Math.pow(x,0.33f);
        else
            x = (7.787f * x) + ( 0.1379310344827586f );
        
        if (y > 0.008856)
            y = (float)Math.pow(y,0.33f);
        else
            y = (7.787f * y) + ( 0.1379310344827586f );
        
        if (z > 0.008856)
            z = (float)Math.pow(z,0.33f);
        else
            z = (7.787f * z) + ( 0.1379310344827586f );
        
        lab[0] = ( 116 * y ) - 16;
        lab[1] = 500 * ( x - y );
        lab[2] = 200 * ( y - z );
        
        return lab;
    }
    public static float[] RGBtoXYZ(int red, int green, int blue){
        float[] xyz = new float[3];
        
        float r = red / 255f;
        float g = green / 255f;
        float b = blue / 255f;
        
        //R
        if ( r > 0.04045)
            r = (float)Math.pow(( ( r + 0.055f ) / 1.055f ), 2.4f);
        else
            r /= 12.92f;
        
        //G
        if ( g > 0.04045)
            g = (float)Math.pow(( ( g + 0.055f ) / 1.055f ), 2.4f);
        else
            g /= 12.92f;
        
        //B
        if ( b > 0.04045)
            b = (float)Math.pow(( ( b + 0.055f ) / 1.055f ), 2.4f);
        else
            b /= 12.92f;
        
        r *= 100;
        g *= 100;
        b *= 100;
        
        float x = 0.412453f * r + 0.35758f * g + 0.180423f * b;
        float y = 0.212671f * r + 0.71516f * g + 0.072169f * b;
        float z = 0.019334f * r + 0.119193f * g + 0.950227f * b;
        
        xyz[0] = x;
        xyz[1] = y;
        xyz[2] = z;
        
        return xyz;
    }
////    public static float calculateDeltaE(float [] lab1, float[] lab2) {
//		return (float) calculateDeltaE(lab1[0],lab1[1],lab1[2],lab2[0],lab2[1],lab2[2]);
//	}
    	public static float calculateDeltaE(float LNumune, float aNumune, float bNumune, float LStandart, float aStandat, float bStandart) {
		float Lmean = (LNumune + LStandart) / 2f; //ok
                System.out.println("L MEan : "+ Lmean );
		float C1 =  (float) Math.sqrt(aNumune*aNumune + bNumune*bNumune); //ok
		float C2 =  (float) Math.sqrt(aStandat*aStandat + bStandart*bStandart); //ok
		float Cmean = (C1 + C2) / 2f; //ok
		          System.out.println("Cmean : "+ Cmean);
		float G =  (float) (( 1f - Math.sqrt( Math.pow(Cmean, 7f) / (Math.pow(Cmean, 7f) + Math.pow(25f, 7f)) ) ) / 2f); //ok
		          System.out.println("G: "+G);
                float aNumunePrime = aNumune * (1f + G); //ok
		System.out.println("aNumunePrime : "+aNumunePrime);
                float aStandatPrime = aStandat * (1f + G); //ok
                System.out.println("aStandartPrime : "+aStandatPrime);
		
		float CNumunePrime =  (float) Math.sqrt(aNumunePrime*aNumunePrime + bNumune*bNumune); //ok
                System.out.println("CNumunePrime : "+CNumunePrime);
		float CStandatPrime =  (float) Math.sqrt(aStandatPrime*aStandatPrime + bStandart*bStandart); //ok
		          System.out.println("CStandartPrime  :  "+ CStandatPrime);
                float Cmeanprime = (CNumunePrime + CStandatPrime) / 2; //ok 
                System.out.println("CmeanPrime : "+ Cmeanprime);
		
		float hNumunePrime =  (float) (Math.atan2(bNumune, aNumunePrime) + 2f*Math.PI * (Math.atan2(bNumune, aNumunePrime)<0f ? 1f : 0f));
		          System.out.println("hNumunePrime : "+ hNumunePrime);
                float hStandartPrime =  (float) (Math.atan2(bStandart, aStandatPrime) + 2f*Math.PI * (Math.atan2(bStandart, aStandatPrime)<0f ? 1f : 0f));
		          System.out.println("hStandartPrime : "+hStandartPrime);
                float HmeanPrime =  (float) ((Math.abs(hNumunePrime - hStandartPrime) > Math.PI) ? (hNumunePrime + hStandartPrime + 2f*Math.PI) / 2f : (hNumunePrime + hStandartPrime) / 2f); //ok
		          System.out.println("HmeanPrime : "+HmeanPrime);
		float T =  (float) (1.0f - 0.17f * Math.cos(HmeanPrime - Math.PI/6.0f) + 0.24f * Math.cos(2f*HmeanPrime) + 0.32f * Math.cos(3f*HmeanPrime + Math.PI/30) - 0.2f * Math.cos(4f*HmeanPrime - 21f*Math.PI/60f)); //ok
		          System.out.println("T : "+T);
		float deltahprime =  (float) ((Math.abs(hNumunePrime - hStandartPrime) <= Math.PI) ? hStandartPrime - hNumunePrime : (hStandartPrime <= hNumunePrime) ? hStandartPrime - hNumunePrime + 2f*Math.PI : hStandartPrime - hNumunePrime - 2f*Math.PI); //ok
                          System.out.println("deltaHprime : "+deltahprime);
		float deltaLPrime = LStandart - LNumune; //ok
                          System.out.println("deltaLprime : "+deltaLPrime);
		float deltaCprime = CStandatPrime - CNumunePrime; //ok
                          System.out.println("deltaCprime : "+deltaCprime);
		float deltaHprime =  (float) (2.0f * Math.sqrt(CNumunePrime*CStandatPrime) * Math.sin(deltahprime / 2.0f)); //ok
                          System.out.println("deltaHprime : "+deltaHprime);
                float SL =  (float) (1.0f + ( (0.015f*(Lmean - 50f)*(Lmean - 50f)) / (Math.sqrt( 20f + (Lmean - 50f)*(Lmean - 50f) )) )); //ok
		
                float SC =  1.0f + 0.045f * Cmeanprime; //ok
                
		float SH =  1.0f + 0.015f * Cmeanprime * T; //ok
		
		float deltaTheta =  (float) ((30f * Math.PI / 180f) * Math.exp(-((180f/Math.PI*HmeanPrime-275f)/25f)*((180f/Math.PI*HmeanPrime-275f)/25f)));
		float RC =  (float) (2f * Math.sqrt(Math.pow(Cmeanprime, 7f) / (Math.pow(Cmeanprime, 7f) + Math.pow(25f, 7f))));
		float RT =  (float) (-RC * Math.sin(2f * deltaTheta));
		
		float KL = 1f;
		float KC = 1f;
		float KH = 1f;
		
		float deltaE = (float) Math.sqrt(
				((deltaLPrime/(KL*SL)) * (deltaLPrime/(KL*SL))) +
				((deltaCprime/(KC*SC)) * (deltaCprime/(KC*SC))) +
				((deltaHprime/(KH*SH)) * (deltaHprime/(KH*SH))) +
				(RT * (deltaCprime/(KC*SC)) * (deltaHprime/(KH*SH)))
				);
				
		return deltaE;
                
               		
		
	} 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DosyaSecimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DosyaSecimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DosyaSecimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DosyaSecimi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DosyaSecimi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSonuc;
    private javax.swing.JButton butonNumune;
    private javax.swing.JButton butonStandart;
    private javax.swing.JLabel deltaE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labNumune;
    private javax.swing.JLabel labStandart;
    private javax.swing.JLabel mesaj;
    // End of variables declaration//GEN-END:variables
}
